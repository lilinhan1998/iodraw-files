<mxfile host="www.iodraw.com" agent="Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0" version="24.7.17">
  <diagram name="第 1 页" id="tff7HQ_WmHDC0ZlMoCYw">
    <mxGraphModel dx="2776" dy="1136" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="IF1k4MAVBQgVod45AsEC-1" value="&lt;div align=&quot;left&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot; face=&quot;Times New Roman&quot;&gt;行为树导航器&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot; face=&quot;Times New Roman&quot;&gt;继承自生命周期节点，和planner、controller一致。&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;除了包含生命周期节点常规的函数外，定义了nav2_bt_navigator::Navigator&amp;lt;nav2_msgs::action::NavigateToPose&amp;gt;导航器，还有std::shared_ptr&amp;lt;nav2_util::OdomSmoother&amp;gt; odom_smoother_里程计平滑器。&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;先来看看navigator.hpp中的Navigator类。&lt;/font&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="10" y="20" width="620" height="170" as="geometry" />
        </mxCell>
        <mxCell id="01SrSEuu2r-TH4prvu8M-1" value="&lt;div align=&quot;left&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Navigator类&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;using Ptr = std::shared_ptr&amp;lt;nav2_bt_navigator::Navigator&amp;lt;ActionT&amp;gt;&amp;gt;;&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;1、on_configure函数&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;1.1、函数参数&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;rclcpp_lifecycle::LifecycleNode::WeakPtr parent_node,&lt;br&gt;const std::vector&amp;lt;std::string&amp;gt; &amp;amp; plugin_lib_names,&lt;br&gt;const FeedbackUtils &amp;amp; feedback_utils,&lt;br&gt;nav2_bt_navigator::NavigatorMuxer * plugin_muxer,&lt;br&gt;std::shared_ptr&amp;lt;nav2_util::OdomSmoother&amp;gt; odom_smoother&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;1.2、getDefaultBTFilepath函数&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;实现的是子类的函数，获取行为树XML文件（字符串类型）&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;1.3、实例化行为树action服务器&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;bt_action_server_ = std::make_unique&amp;lt;nav2_behavior_tree::BtActionServer&amp;lt;ActionT&amp;gt;&amp;gt;(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; node,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // 调用派生类中的函数&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; getName(),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; plugin_lib_names,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; default_bt_xml_filename,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::bind(&amp;amp;Navigator::onGoalReceived, this, std::placeholders::_1),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::bind(&amp;amp;Navigator::onLoop, this),&amp;nbsp; // 可以用来发布action的feedback信息&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::bind(&amp;amp;Navigator::onPreempt, this, std::placeholders::_1),&amp;nbsp; // 占用&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::bind(&amp;amp;Navigator::onCompletion, this, std::placeholders::_1, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;std::placeholders::_2));&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;1.4、黑板变量获取&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;获取&lt;/font&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;bt_action_server_中的黑板，并在黑板上设置tf、initial_pose_received布尔变量、恢复次数以及里程计平滑器。&lt;/font&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;font face=&quot;Times New Roman&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="10" y="240" width="620" height="780" as="geometry" />
        </mxCell>
        <mxCell id="01SrSEuu2r-TH4prvu8M-2" value="&lt;div align=&quot;left&quot; style=&quot;font-family: &amp;quot;Droid Sans Mono&amp;quot;, &amp;quot;monospace&amp;quot;, monospace; font-weight: normal; line-height: 24px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;BtActionServer类&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;" vertex="1" parent="1">
          <mxGeometry x="716" y="240" width="550" height="220" as="geometry" />
        </mxCell>
        <mxCell id="01SrSEuu2r-TH4prvu8M-3" value="" style="endArrow=classic;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" target="IF1k4MAVBQgVod45AsEC-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="320" y="240" as="sourcePoint" />
            <mxPoint x="370" y="190" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="01SrSEuu2r-TH4prvu8M-5" value="" style="endArrow=classic;html=1;rounded=0;exitX=-0.001;exitY=0.536;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.995;entryY=0.152;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" target="01SrSEuu2r-TH4prvu8M-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="715.4500000000003" y="357.9200000000001" as="sourcePoint" />
            <mxPoint x="630" y="359" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="01SrSEuu2r-TH4prvu8M-6" value="&lt;div style=&quot;color: #9da5b3;background-color: #282c34;font-family: &#39;Droid Sans Mono&#39;, &#39;monospace&#39;, monospace;font-weight: normal;font-size: 18px;line-height: 24px;white-space: pre;&quot;&gt;&lt;div&gt;NavigatorMuxer&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-650" y="240" width="620" height="640" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
